//опциональные типы (вроде сложно)
//nil в свифте ничего не принимает (ПРОГА УПАДЕТ)
//ноль - это ноль, nil - отсутствие значений (даже нуля)

var apples : Int? = 5 //если мы ожидаем что Int может быть nil то мы используем Int? (Инт+вопрос)
apples = nil
//сейчас если мы попробуем что-то прибавить к нил, прод упадет
//нил используется при получении запросов с сервера, если нужно знать что чего-то нет, отсутствием будет нил

if apples == nil {
    print("значение nil")
} else {
    print("всего яблок \(apples)")
}
//выполнили проверку на нил, если функция принимает Int или другой тип, мы не можем использовать Int?
//опциональный тип можно привести к обычному
var apples1 :Int? = 2
var aa=apples1!+2 //восклицательный знак приводит переменную к неопциональному типу

if var number = apples {        //важно
    number+=2                   //важно
} else {                        //важно
    print ("NIL")               //важно
}//создали переменную и присвоили ей значение опционального типа, Если apples nil то выражение вернет false (вот тут вся писечка) и тогда сразу прыгаем на елсе, а если тру то выполняем 1 условие (Все анрапнется) (елсе поидее тоже не надо добавлять)

//ниже пример от ЭПЛ
let text = "1234" //допустим имеется строка из цифр (и мы об этом знаем)
//text.toInt() отбой этот метод уже не работает юзаем метод выше он самый оперативный судя по всему


var apples2:Int! = nil //такому типу данных можем присвоить значение далее после nil
apples2 = 2//ответственность программиста, если не переназначается и идет дальше - будут проблемы

